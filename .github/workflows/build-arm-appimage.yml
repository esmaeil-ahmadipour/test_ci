name: Build ARM AppImage

on:
  push:
    tags:
      - 'v*'  # Trigger on tags starting with v, e.g. v1.2.3

jobs:
  build-arm:
    runs-on: ubuntu-22.04-arm  # native ARM64 hosted runner

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Flutter 3.22.0 from source
        run: |
          git clone https://github.com/flutter/flutter.git --branch 3.22.0 --depth 1
          echo "$PWD/flutter/bin" >> $GITHUB_PATH
          export PATH="$PWD/flutter/bin:$PATH"
          flutter doctor -v
          flutter config --enable-linux-desktop
          flutter precache --linux

      - name: Install dependencies & build Flutter Linux
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libfuse2 cmake ninja-build wget appstream
          flutter pub get
          flutter build linux --release --target-platform=linux-arm64

      - name: Download AppImage tool
        run: |
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-aarch64.AppImage
          chmod +x appimagetool-aarch64.AppImage

      - name: Package into AppImage
        run: |
          APPDIR=build/linux/arm64/release/bundle
          cp linux/pactus_gui.desktop $APPDIR/
          cp linux/pactus_gui.png $APPDIR/
          ls -l $APPDIR
          ./appimagetool-aarch64.AppImage "$APPDIR"


      - name: Check if release exists
        id: check_release
        run: |
          RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}" | jq -r '.id')
          if [ "$RELEASE_ID" = "null" ]; then
            echo "Release not found"
            echo "exists=false" >> $GITHUB_OUTPUT
          else
            echo "Release found: $RELEASE_ID"
            echo "exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload AppImage to existing Release
        if: steps.check_release.outputs.exists == 'true'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          artifacts: '*.AppImage'
          allowUpdates: true
          overwrite: true

      - name: Upload fallback artifact
        if: steps.check_release.outputs.exists != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: flutter-arm-appimage
          path: '*.AppImage'
