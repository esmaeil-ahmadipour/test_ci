name: Build ARM AppImage

on:
  push:
    tags:
      - 'v*'  # Trigger on tags starting with v, e.g. v1.2.3

jobs:
  build-arm:
    runs-on: ubuntu-22.04-arm  # native ARM64 hosted runner

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Flutter 3.22.0 from source
        run: |
          git clone https://github.com/flutter/flutter.git --branch 3.22.0 --depth 1
          echo "$PWD/flutter/bin" >> $GITHUB_PATH
          export PATH="$PWD/flutter/bin:$PATH"
          flutter doctor -v
          flutter config --enable-linux-desktop
          flutter precache --linux

      - name: Install dependencies & build Flutter Linux
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libfuse2 cmake ninja-build wget appstream
          flutter pub get
          flutter build linux --release --target-platform=linux-arm64

      - name: Download AppImage tool
        run: |
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-aarch64.AppImage
          chmod +x appimagetool-aarch64.AppImage

      - name: Package into AppImage
        run: |
          APPDIR=build/linux/arm64/release/bundle
          cp linux/pactus_gui.desktop $APPDIR/
          cp linux/pactus_gui.png $APPDIR/
          ./appimagetool-aarch64.AppImage "$APPDIR" pactus_gui-aarch64.AppImage
          ls -l pactus_gui-aarch64.AppImage


      - name: Upload AppImage to Release (create if missing)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=${GITHUB_REF##*/}  # e.g. v0.0.10
          APPIMAGE_FILE="pactus_gui-aarch64.AppImage"

          if gh release view "$TAG_NAME" > /dev/null 2>&1; then
            echo "Release $TAG_NAME exists. Uploading artifact..."
          else
            echo "Release $TAG_NAME does not exist. Creating release..."
            gh release create "$TAG_NAME" "$APPIMAGE_FILE" --title "$TAG_NAME" --notes "Automated release for $TAG_NAME"
            exit 0
          fi

          gh release upload "$TAG_NAME" "$APPIMAGE_FILE" --clobber
